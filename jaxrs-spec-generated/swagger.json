{
  "swagger" : "2.0",
  "info" : {
    "description" : "Solution to combine municipality services under single API.",
    "version" : "0.1.0",
    "title" : "Kunta API"
  },
  "host" : "demo.kuntaapi.fi",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json;charset=utf-8" ],
  "produces" : [ "application/json;charset=utf-8" ],
  "paths" : {
    "/electronicServiceChannels" : {
      "get" : {
        "tags" : [ "ServiceChannels", "ElectronicServiceChannels" ],
        "summary" : "Lists electronic service channels",
        "description" : "Lists electronic service channels",
        "operationId" : "listElectronicServiceChannels",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of electronic service channels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ElectronicServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/electronicServiceChannels/{electronicServiceChannelId}" : {
      "get" : {
        "tags" : [ "ServiceChannels", "ElectronicServiceChannels" ],
        "summary" : "Finds an electronic service channel by id",
        "description" : "Finds an electronic service channel by id",
        "operationId" : "findElectronicServiceChannel",
        "parameters" : [ {
          "name" : "electronicServiceChannelId",
          "in" : "path",
          "description" : "electronicChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an electronic service channel by id",
            "schema" : {
              "$ref" : "#/definitions/ElectronicServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "List organizations",
        "description" : "List organizations",
        "operationId" : "listOrganizations",
        "parameters" : [ {
          "name" : "businessName",
          "in" : "query",
          "description" : "Filter by organization's business name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "businessCode",
          "in" : "query",
          "description" : "Filter by organization's business code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search organizations by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "define order (NATURAL or SCORE). Default is NATURAL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC. Default is ASC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of organizations",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Organization"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Find organization",
        "description" : "Find organization",
        "operationId" : "findOrganization",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "organization id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization",
            "schema" : {
              "$ref" : "#/definitions/Organization"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/announcements" : {
      "get" : {
        "tags" : [ "Announcements" ],
        "summary" : "Lists organizations announcements",
        "description" : "Lists organizations announcements\n",
        "operationId" : "listOrganizationAnnouncements",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter with slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "first index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "PUBLICATION_DATE",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of announcements",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Announcement"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/announcements/{announcementId}" : {
      "get" : {
        "tags" : [ "Announcements" ],
        "summary" : "Finds an organizations announcement",
        "description" : "Finds organization's single announcement\n",
        "operationId" : "findOrganizationAnnouncement",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "announcementId",
          "in" : "path",
          "description" : "Announcement id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single announcement",
            "schema" : {
              "$ref" : "#/definitions/Announcement"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Lists organizations banners",
        "description" : "Lists organizations banners\n",
        "operationId" : "listOrganizationBanners",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of banners",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Banner"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Finds organizations banner",
        "description" : "Finds single organization banner\n",
        "operationId" : "findOrganizationBanner",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "banner id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization banner",
            "schema" : {
              "$ref" : "#/definitions/NewsArticle"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}/images" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Returns a list of organization banner images",
        "description" : "Returns a list of organization banner images\n",
        "operationId" : "listOrganizationBannerImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "Banner id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of organization banner images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Returns a single organiztion banner image",
        "description" : "Returns a single organiztion banner image\n",
        "operationId" : "findOrganizationBannerImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "Banner Id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Banner image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization banner image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Returns an organization banner image data",
        "description" : "Returns an organization banner image data\n",
        "operationId" : "getOrganizationBannerImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "Banner id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Banner image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization banner image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Lists organizations contacts",
        "description" : "Lists organizations contacts\n",
        "operationId" : "listOrganizationContacts",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search contacts by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "define order (NATURAL, DISPLAY_NAME or SCORE). Default is NATURAL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC. Default is ASC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of contacts",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contact"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/contacts/{contactId}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Finds an organizations contact",
        "description" : "Finds organization's single contact\n",
        "operationId" : "findOrganizationContact",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "contactId",
          "in" : "path",
          "description" : "Contact id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single contact",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/emergencies" : {
      "get" : {
        "tags" : [ "Emergencies" ],
        "summary" : "Lists organizations emergencies",
        "description" : "Lists organizations emergencies\n",
        "operationId" : "listOrganizationEmergencies",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "location",
          "in" : "query",
          "description" : "Return emergencies by location",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "description" : "Return emergencies before specified time",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "Return emergencies after specified time",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Define order (NATURAL, START)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderDir",
          "in" : "query",
          "description" : "Order direction (ASC, DESC). Default is ASC",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of emergencies",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Emergency"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/emergencies/{emergencyId}" : {
      "get" : {
        "tags" : [ "Emergencies" ],
        "summary" : "Returns organizations emergency by id",
        "description" : "Returns organizations emergency by id\n",
        "operationId" : "findOrganizationEmergency",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "emergencyId",
          "in" : "path",
          "description" : "Emergency id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single emergency",
            "schema" : {
              "$ref" : "#/definitions/Emergency"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Lists organizations events",
        "description" : "Lists organizations events\n",
        "operationId" : "listOrganizationEvents",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "startBefore",
          "in" : "query",
          "description" : "return only events starting before the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startAfter",
          "in" : "query",
          "description" : "return only events starting after the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endBefore",
          "in" : "query",
          "description" : "return only events ending before the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endAfter",
          "in" : "query",
          "description" : "return only events ending after the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "first index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "define order (startDate, endDate). Default is startDate",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderDir",
          "in" : "query",
          "description" : "ascending, descending. Default is ascending",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of events",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Event"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns organizations event by id",
        "description" : "Returns organizations event by id\n",
        "operationId" : "findOrganizationEvent",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single event",
            "schema" : {
              "$ref" : "#/definitions/Event"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}/images" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns list of event images",
        "description" : "Returns list of event images\n",
        "operationId" : "listOrganizationEventImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of event images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns an event image",
        "description" : "Returns an event image \n",
        "operationId" : "findOrganizationEventImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an event image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns an event image data",
        "description" : "Returns an event image data\n",
        "operationId" : "getOrganizationEventImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an event image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/files" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Lists organizations files",
        "description" : "Lists organizations files\n",
        "operationId" : "listOrganizationFiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "query",
          "description" : "Filter with page",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search files by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations files",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FileDef"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/files/{fileId}" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Finds organizations file",
        "description" : "Finds single organization file\n",
        "operationId" : "findOrganizationFile",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fileId",
          "in" : "path",
          "description" : "file id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization file",
            "schema" : {
              "$ref" : "#/definitions/FileDef"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Files" ],
        "summary" : "Deletes an organization file",
        "description" : "Deletes single organization file\n",
        "operationId" : "deleteOrganizationFile",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fileId",
          "in" : "path",
          "description" : "file id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/files/{fileId}/data" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Returns an organization file data",
        "description" : "Returns an organization file data\n",
        "operationId" : "getOrganizationFileData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fileId",
          "in" : "path",
          "description" : "file id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization file data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/fragments" : {
      "get" : {
        "tags" : [ "Fragments" ],
        "summary" : "Lists organizations page fragments",
        "description" : "Lists organizations page fragments\n",
        "operationId" : "listOrganizationFragments",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter results by fragment slug",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of page fragments",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fragment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/fragments/{fragmentId}" : {
      "get" : {
        "tags" : [ "Fragments" ],
        "summary" : "Finds organizations page fragment",
        "description" : "Finds single organization page fragment\n",
        "operationId" : "findOrganizationFragment",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fragmentId",
          "in" : "path",
          "description" : "fragment id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization page fragment",
            "schema" : {
              "$ref" : "#/definitions/Fragment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/incidents" : {
      "get" : {
        "tags" : [ "Incidents" ],
        "summary" : "Lists organizations incidents",
        "description" : "Lists organizations incidents\n",
        "operationId" : "listOrganizationIncidents",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter with slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startBefore",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endAfter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "area",
          "in" : "query",
          "description" : "Return only incidents from specified area",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "Define order (start, end)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderDir",
          "in" : "query",
          "description" : "Order direction (ASC, DESC). Default is ASC",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of incidents",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Incident"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/incidents/{incidentId}" : {
      "get" : {
        "tags" : [ "Incidents" ],
        "summary" : "Returns organizations incident by id",
        "description" : "Returns organizations incident by id\n",
        "operationId" : "findOrganizationIncident",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "incidentId",
          "in" : "path",
          "description" : "Incident id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single incident",
            "schema" : {
              "$ref" : "#/definitions/Incident"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Lists organizations jobs",
        "description" : "Lists organizations jobs\n",
        "operationId" : "listOrganizationJobs",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "PUBLICATION_START or PUBLICATION_END",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations jobs",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Job"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Finds organizations job",
        "description" : "Finds single organization job\n",
        "operationId" : "findOrganizationJob",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "job id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization job",
            "schema" : {
              "$ref" : "#/definitions/Job"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Lists organizations menus",
        "description" : "Lists organizations menus\n",
        "operationId" : "listOrganizationMenus",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter with slug",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations menus",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Menu"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus/{menuId}" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Finds organizations menu",
        "description" : "Finds single organization menu\n",
        "operationId" : "findOrganizationMenu",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuId",
          "in" : "path",
          "description" : "menu id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization menu",
            "schema" : {
              "$ref" : "#/definitions/Menu"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus/{menuId}/items" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Lists organizations menu items",
        "description" : "Lists organization menu items\n",
        "operationId" : "listOrganizationMenuItems",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuId",
          "in" : "path",
          "description" : "menu id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations menu items",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MenuItem"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus/{menuId}/items/{menuItemId}" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Finds organization menu item",
        "description" : "Finds single organization menu item\n",
        "operationId" : "findOrganizationMenuItem",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuId",
          "in" : "path",
          "description" : "menu id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuItemId",
          "in" : "path",
          "description" : "menu item id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization menu item",
            "schema" : {
              "$ref" : "#/definitions/MenuItem"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Lists organizations news",
        "description" : "Lists organizations news\n",
        "operationId" : "listOrganizationNews",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter with slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Filter by tag",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "publishedBefore",
          "in" : "query",
          "description" : "return only news published before the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "publishedAfter",
          "in" : "query",
          "description" : "return only news published after the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search news by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "define order (NATURAL or SCORE). Default is NATURAL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC. Default is ASC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "first index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of news",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NewsArticle"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Finds organizations news article",
        "description" : "Finds organizations single news article\n",
        "operationId" : "findOrganizationNewsArticle",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single news article",
            "schema" : {
              "$ref" : "#/definitions/NewsArticle"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}/images" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Returns list of news article images",
        "description" : "Returns list of news article images\n",
        "operationId" : "listOrganizationNewsArticleImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a news article images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Returns an news article image",
        "description" : "Returns an news article image\n",
        "operationId" : "findOrganizationNewsArticleImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an news article image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Returns a news article image data",
        "description" : "Returns a news article image data\n",
        "operationId" : "getOrganizationNewsArticleImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a news article image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Lists organizations pages",
        "description" : "Lists organizations pages\n",
        "operationId" : "listOrganizationPages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "parentId",
          "in" : "query",
          "description" : "Filter results by parent id",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Filter results by page path",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search pages by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "define order (NATURAL or SCORE). Default is NATURAL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC. Default is ASC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of pages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Page"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Finds organizations page",
        "description" : "Finds single organization page\n",
        "operationId" : "findOrganizationPage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization page",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Pages" ],
        "summary" : "Deletes an organizations page",
        "description" : "Deletes single organization page\n",
        "operationId" : "deleteOrganizationPage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/content" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns organizations page content in all available languages",
        "description" : "Returns single organization page content in all available languages\n",
        "operationId" : "findOrganizationPageContent",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns single page content in all available languages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LocalizedValue"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/images" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns a list of organization page images",
        "description" : "Returns a list of organization page images\n",
        "operationId" : "listOrganizationPageImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "Page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filter by type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of organization page images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns a single organiztion page image",
        "description" : "Returns a single organiztion page image\n",
        "operationId" : "findOrganizationPageImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "Page Id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Page image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization page image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns an organization page image data",
        "description" : "Returns an organization page image data\n",
        "operationId" : "getOrganizationPageImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "Page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Page image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization page image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/settings/" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Lists organizations settings",
        "description" : "Lists organizations settings\n",
        "operationId" : "listOrganizationSettings",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Setting key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of settings",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OrganizationSetting"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Creates organization setting",
        "description" : "Creates organization setting\n",
        "operationId" : "createOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "setting",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OrganizationSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns create organization setting",
            "schema" : {
              "$ref" : "#/definitions/OrganizationSetting"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/settings/{settingId}" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Finds organizations setting",
        "description" : "Finds single organization setting\n",
        "operationId" : "findOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "settingId",
          "in" : "path",
          "description" : "Setting id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization setting",
            "schema" : {
              "$ref" : "#/definitions/OrganizationSetting"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Settings" ],
        "summary" : "Updates an organization setting",
        "description" : "Updates an organization setting\n",
        "operationId" : "updateOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "settingId",
          "in" : "path",
          "description" : "Setting id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "setting",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OrganizationSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single an updated organization setting",
            "schema" : {
              "$ref" : "#/definitions/OrganizationSetting"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes an organization setting",
        "description" : "Deletes an organization setting\n",
        "operationId" : "deleteOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "settingId",
          "in" : "path",
          "description" : "Setting id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/shortlinks" : {
      "get" : {
        "tags" : [ "Shortlinks" ],
        "summary" : "Lists organizations shortlinks",
        "description" : "Lists organizations shortlinks\n",
        "operationId" : "listOrganizationShortlinks",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Filter results by path",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of shortlinks",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Shortlink"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/shortlinks/{shortlinkId}" : {
      "get" : {
        "tags" : [ "Shortlinks" ],
        "summary" : "Finds organization shortlink",
        "description" : "Finds single organization shortlink\n",
        "operationId" : "findOrganizationShortlink",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "shortlinkId",
          "in" : "path",
          "description" : "shortlink id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization shortlink",
            "schema" : {
              "$ref" : "#/definitions/Shortlink"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Lists organizations tiles",
        "description" : "Lists organizations tiles\n",
        "operationId" : "listOrganizationTiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of tiles",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tile"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Finds organizations tile",
        "description" : "Finds single organization tile\n",
        "operationId" : "findOrganizationTile",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "tile id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization tile",
            "schema" : {
              "$ref" : "#/definitions/Tile"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}/images" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Returns a list of organization tile images",
        "description" : "Returns a list of organization tile images\n",
        "operationId" : "listOrganizationTileImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "Tile id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of organization tile images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Returns a single organiztion tile image",
        "description" : "Returns a single organiztion tile image\n",
        "operationId" : "findOrganizationTileImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "Tile Id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Tile image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization tile image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Returns an organization tile image data",
        "description" : "Returns an organization tile image data\n",
        "operationId" : "getOrganizationTileImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "Tile id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Tile image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization tile image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportAgencies" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists organizations public transport agencies",
        "description" : "Lists organizations public transport agencies\n",
        "operationId" : "listOrganizationPublicTransportAgencies",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of public transport agencies",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Agency"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportAgencies/{agencyId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds an organizations public transport agency",
        "description" : "Finds organization's single public transport agency\n",
        "operationId" : "findOrganizationPublicTransportAgency",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "agencyId",
          "in" : "path",
          "description" : "Agency id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single public transport agency",
            "schema" : {
              "$ref" : "#/definitions/Agency"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportRoutes" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists organizations public transport routes",
        "description" : "Lists organizations public transport routes\n",
        "operationId" : "listOrganizationPublicTransportRoutes",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of public transport routes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Route"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportRoutes/{routeId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds an organizations public transport route",
        "description" : "Finds organization's single public transport route\n",
        "operationId" : "findOrganizationPublicTransportRoute",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "routeId",
          "in" : "path",
          "description" : "Route id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single public transport route",
            "schema" : {
              "$ref" : "#/definitions/Route"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportSchedules" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists schedules of organization's public transport schedules",
        "description" : "Lists schedules of organization's public transport schedules\n",
        "operationId" : "listOrganizationPublicTransportSchedules",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organization's public transport schedules",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Schedule"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportSchedules/{scheduleId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds organizations public transport schedule",
        "description" : "Finds organizations public transport schedule\n",
        "operationId" : "findOrganizationPublicTransportSchedule",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "Schedule id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns an organizations public transport schedule",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportStopTimes" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists stopTimes of organization's public transport stopTimes",
        "description" : "Lists stopTimes of organization's public transport stopTimes\n",
        "operationId" : "listOrganizationPublicTransportStopTimes",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "stopId",
          "in" : "query",
          "description" : "Filter stop times by stopId",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "departureTime",
          "in" : "query",
          "description" : "Filter stop times that depart in or after specified time. Value is defined in seconds since midnight",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "DEPARTURE_TIME",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organization's public transport stopTimes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/StopTime"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportStopTimes/{stopTimeId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds organizations public transport stopTime",
        "description" : "Finds organizations public transport stopTime\n",
        "operationId" : "findOrganizationPublicTransportStopTime",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "stopTimeId",
          "in" : "path",
          "description" : "StopTime id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns an organizations public transport stopTime",
            "schema" : {
              "$ref" : "#/definitions/StopTime"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportStops" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists organizations public transport stops",
        "description" : "Lists organizations public transport stops\n",
        "operationId" : "listOrganizationPublicTransportStops",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of public transport stops",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Stop"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportStops/{stopId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds a stop of organizations public transport route",
        "description" : "Finds a stop of organizations public transport route\n",
        "operationId" : "findOrganizationPublicTransportStop",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "stopId",
          "in" : "path",
          "description" : "Stop id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns organizations public transport route stop",
            "schema" : {
              "$ref" : "#/definitions/Stop"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportTrips" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists trips of organization's public transport trips",
        "description" : "Lists trips of organization's public transport trips\n",
        "operationId" : "listOrganizationPublicTransportTrips",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organization's public transport trips",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Trip"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportTrips/{tripId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds organizations public transport trip",
        "description" : "Finds organizations public transport trip\n",
        "operationId" : "findOrganizationPublicTransportTrip",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tripId",
          "in" : "path",
          "description" : "Trip id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns an organizations public transport trip",
            "schema" : {
              "$ref" : "#/definitions/Trip"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/phoneServiceChannels" : {
      "get" : {
        "tags" : [ "ServiceChannels", "PhoneServiceChannels" ],
        "summary" : "Lists phone service channels",
        "description" : "Lists phone service channels",
        "operationId" : "listPhoneServiceChannels",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of phone service channels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PhoneServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/phoneServiceChannels/{phoneServiceChannelId}" : {
      "get" : {
        "tags" : [ "ServiceChannels", "PhoneServiceChannels" ],
        "summary" : "Finds a phone service channel by id",
        "description" : "Finds a phone service channel by id",
        "operationId" : "findPhoneServiceChannel",
        "parameters" : [ {
          "name" : "phoneServiceChannelId",
          "in" : "path",
          "description" : "Phone service channel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a phone service channel",
            "schema" : {
              "$ref" : "#/definitions/PhoneServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/printableFormServiceChannels" : {
      "get" : {
        "tags" : [ "ServiceChannels", "PrintableFormServiceChannels" ],
        "summary" : "Lists printable form service channels",
        "description" : "Lists printable form service channels",
        "operationId" : "listPrintableFormServiceChannels",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of printable form service channels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PrintableFormServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/printableFormServiceChannels/{printableFormServiceChannelId}" : {
      "get" : {
        "tags" : [ "ServiceChannels", "PrintableFormServiceChannels" ],
        "summary" : "Finds a printable form service channel",
        "description" : "Finds a printable form service channel",
        "operationId" : "findPrintableFormServiceChannel",
        "parameters" : [ {
          "name" : "printableFormServiceChannelId",
          "in" : "path",
          "description" : "Printable form service channel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns printable form service channel",
            "schema" : {
              "$ref" : "#/definitions/PrintableFormServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/serviceLocationServiceChannels" : {
      "get" : {
        "tags" : [ "ServiceChannels", "ServiceLocationServiceChannels" ],
        "summary" : "Lists service location service channels",
        "description" : "Lists service location service channels",
        "operationId" : "listServiceLocationServiceChannels",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "query",
          "description" : "Organization id",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search service location channels by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "define order (NATURAL or SCORE). Default is NATURAL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC. Default is ASC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of service location service channels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceLocationServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/serviceLocationServiceChannels/{serviceLocationServiceChannelId}" : {
      "get" : {
        "tags" : [ "ServiceChannels", "ServiceLocationServiceChannels" ],
        "summary" : "Finds a service location service by id",
        "description" : "Finds a service location service by id",
        "operationId" : "findServiceLocationServiceChannel",
        "parameters" : [ {
          "name" : "serviceLocationServiceChannelId",
          "in" : "path",
          "description" : "serviceLocationChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a service location service channel",
            "schema" : {
              "$ref" : "#/definitions/ServiceLocationServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ServiceChannels", "ServiceLocationServiceChannels" ],
        "summary" : "Updates a service location channel",
        "description" : "Updates a service location channel",
        "operationId" : "updateServiceLocationServiceChannel",
        "parameters" : [ {
          "name" : "serviceLocationServiceChannelId",
          "in" : "path",
          "description" : "serviceLocationChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "serviceLocationChannel",
          "description" : "New service location channel data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceLocationServiceChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a service location service channel",
            "schema" : {
              "$ref" : "#/definitions/ServiceLocationServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Service list",
        "description" : "Lists services",
        "operationId" : "listServices",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "query",
          "description" : "Return only services belonging to specified organization",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search services by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "define order (NATURAL or SCORE). Default is NATURAL",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC. Default is ASC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of services",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Service"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Services" ],
        "summary" : "Create service",
        "description" : "Creates new service",
        "operationId" : "createService",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created service",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Finds a service by id",
        "description" : "Finds service",
        "operationId" : "findService",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a service",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Services" ],
        "summary" : "Updates service",
        "description" : "Updates service",
        "operationId" : "updateService",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Organization service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an updated service",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/electronicChannels" : {
      "get" : {
        "tags" : [ "Services", "ElectronicChannels" ],
        "summary" : "Lists ElectronicChannels by serviceId",
        "description" : "Lists ElectronicChannels by serviceId",
        "operationId" : "listServiceElectronicChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of ElectronicChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ElectronicServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/electronicChannels/{electronicChannelId}" : {
      "get" : {
        "tags" : [ "Services", "ElectronicChannels" ],
        "summary" : "finds ElectronicChannel by electronicChannelId",
        "description" : "finds ElectronicChannels by electronicChannelId",
        "operationId" : "findServiceElectronicChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "electronicChannelId",
          "in" : "path",
          "description" : "electronicChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns ElectronicChannel",
            "schema" : {
              "$ref" : "#/definitions/ElectronicServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/phoneChannels" : {
      "get" : {
        "tags" : [ "Services", "PhoneChannels" ],
        "summary" : "Lists PhoneChannels by serviceId",
        "description" : "Lists PhoneChannels by serviceId",
        "operationId" : "listServicePhoneChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of PhoneChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PhoneServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/phoneChannels/{phoneChannelId}" : {
      "get" : {
        "tags" : [ "Services", "PhoneChannels" ],
        "summary" : "finds PhoneChannel by phoneChannelId",
        "description" : "finds PhoneChannels by phoneChannelId",
        "operationId" : "findServicePhoneChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "phoneChannelId",
          "in" : "path",
          "description" : "phoneChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns PhoneChannel",
            "schema" : {
              "$ref" : "#/definitions/PhoneServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/printableFormChannels" : {
      "get" : {
        "tags" : [ "Services", "PrintableFormChannels" ],
        "summary" : "Lists PrintableFormChannels by serviceId",
        "description" : "Lists PrintableFormChannels by serviceId",
        "operationId" : "listServicePrintableFormChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of PrintableFormChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PrintableFormServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/printableFormChannels/{printableFormChannelId}" : {
      "get" : {
        "tags" : [ "Services", "PrintableFormChannels" ],
        "summary" : "finds PrintableFormChannel by printableFormChannelId",
        "description" : "finds PrintableFormChannels by printableFormChannelId",
        "operationId" : "findServicePrintableFormChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "printableFormChannelId",
          "in" : "path",
          "description" : "printableFormChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns PrintableFormChannel",
            "schema" : {
              "$ref" : "#/definitions/PrintableFormServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/serviceLocationChannels" : {
      "get" : {
        "tags" : [ "Services", "ServiceLocationChannels" ],
        "summary" : "Lists ServiceLocationChannels by serviceId",
        "description" : "Lists ServiceLocationChannels by serviceId",
        "operationId" : "listServiceServiceLocationChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of ServiceLocationChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceLocationServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/serviceLocationChannels/{serviceLocationChannelId}" : {
      "get" : {
        "tags" : [ "Services", "ServiceLocationChannels" ],
        "summary" : "finds ServiceLocationChannel by serviceLocationChannelId",
        "description" : "finds ServiceLocationChannels by serviceLocationChannelId",
        "operationId" : "findServiceServiceLocationChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "serviceLocationChannelId",
          "in" : "path",
          "description" : "serviceLocationChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns ServiceLocationChannel",
            "schema" : {
              "$ref" : "#/definitions/ServiceLocationServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/webPageChannels" : {
      "get" : {
        "tags" : [ "Services", "WebPageChannels" ],
        "summary" : "Lists WebPageChannels by serviceId",
        "description" : "Lists WebPageChannels by serviceId",
        "operationId" : "listServiceWebPageChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of WebPageChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WebPageServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/services/{serviceId}/webPageChannels/{webPageChannelId}" : {
      "get" : {
        "tags" : [ "Services", "WebPageChannels" ],
        "summary" : "finds WebPageChannel by webPageChannelId",
        "description" : "finds WebPageChannels by webPageChannelId",
        "operationId" : "findServiceWebPageChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "webPageChannelId",
          "in" : "path",
          "description" : "webPageChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns WebPageChannel",
            "schema" : {
              "$ref" : "#/definitions/WebPageServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/webPageServiceChannels" : {
      "get" : {
        "tags" : [ "ServiceChannels", "WebPageServiceChannels" ],
        "summary" : "Lists web page service channels",
        "description" : "Lists web page service channels",
        "operationId" : "listWebPageServiceChannels",
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of web page service channels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WebPageServiceChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/webPageServiceChannels/{webPageServiceChannelId}" : {
      "get" : {
        "tags" : [ "ServiceChannels", "WebPageServiceChannels" ],
        "summary" : "Finds a web page service channel by id",
        "description" : "Finds a web page service channel by id",
        "operationId" : "findWebPageServiceChannel",
        "parameters" : [ {
          "name" : "webPageServiceChannelId",
          "in" : "path",
          "description" : "webPageChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a web page service channel",
            "schema" : {
              "$ref" : "#/definitions/WebPageServiceChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basicAuth" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "Attachment" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "contentType" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Organization" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Entity identifier."
        },
        "parentOrganization" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Organizations parent organization identifier if exists."
        },
        "organizationType" : {
          "type" : "string",
          "description" : "Organization type (State, Municipality, RegionalOrganization, Organization, Company)."
        },
        "municipality" : {
          "description" : "Municipality including municipality code and a localized list of municipality names.",
          "$ref" : "#/definitions/Municipality"
        },
        "businessCode" : {
          "type" : "string",
          "description" : "Organization business code (Y-tunnus)."
        },
        "businessName" : {
          "type" : "string",
          "description" : "Organization business name (name used for business code)."
        },
        "names" : {
          "type" : "array",
          "description" : "List of organization names.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "displayNameType" : {
          "type" : "array",
          "description" : "List of Display name types (Name or AlternateName) for each language version of OrganizationNames.",
          "items" : {
            "$ref" : "#/definitions/NameTypeByLanguage"
          }
        },
        "areaType" : {
          "type" : "string",
          "description" : "Area type (WholeCountry, WholeCountryExceptAlandIslands, AreaType)."
        },
        "areas" : {
          "type" : "array",
          "description" : "List of organization areas.",
          "items" : {
            "$ref" : "#/definitions/Area"
          }
        },
        "descriptions" : {
          "type" : "array",
          "description" : "List of organizations descriptions.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "emailAddresses" : {
          "type" : "array",
          "description" : "List of organizations email addresses.",
          "items" : {
            "$ref" : "#/definitions/Email"
          }
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "List of organizations phone numbers.",
          "items" : {
            "$ref" : "#/definitions/Phone"
          }
        },
        "webPages" : {
          "type" : "array",
          "description" : "List of organizations web pages.",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "List of organizations addresses.",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "publishingStatus" : {
          "type" : "string",
          "description" : "Publishing status (Draft, Published, Deleted, Modified and OldPublished)."
        },
        "services" : {
          "type" : "array",
          "description" : "List of organizations services.",
          "items" : {
            "$ref" : "#/definitions/OrganizationService"
          }
        }
      },
      "description" : "Organization"
    },
    "Service" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "statutoryDescriptionId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "chargeType" : {
          "type" : "string"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "areaType" : {
          "type" : "string",
          "description" : "Area type (WholeCountry, WholeCountryExceptAlandIslands, AreaType)."
        },
        "areas" : {
          "type" : "array",
          "description" : "List of service areas.",
          "items" : {
            "$ref" : "#/definitions/Area"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "serviceClasses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "ontologyTerms" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "targetGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "lifeEvents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "industrialClasses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "legislation" : {
          "type" : "array",
          "description" : "List of laws related to the service.",
          "items" : {
            "$ref" : "#/definitions/Law"
          }
        },
        "keywords" : {
          "type" : "array",
          "description" : "List of localized service keywords.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "requirements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "publishingStatus" : {
          "type" : "string",
          "description" : "Publishing status. Possible values are: Draft, Published, Deleted, Modified or OldPublished."
        },
        "organizations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceOrganization"
          }
        },
        "electronicServiceChannelIds" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "phoneServiceChannelIds" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "printableFormServiceChannelIds" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "serviceLocationServiceChannelIds" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "webPageServiceChannelIds" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      }
    },
    "ServiceOrganization" : {
      "type" : "object",
      "properties" : {
        "additionalInformation" : {
          "type" : "array",
          "description" : "Localized list of additional information.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "organizationId" : {
          "type" : "string",
          "description" : "Organization identifier (organization related to the service). Required if role type is Responsible or if ProvisionType is SelfProduced."
        },
        "roleType" : {
          "type" : "string",
          "description" : "Role type, valid values Responsible or Producer."
        },
        "provisionType" : {
          "type" : "string",
          "description" : "Provision type, valid values SelfProduced, VoucherServices, PurchaseServices or Other. Required if RoleType value is Producer."
        },
        "webPages" : {
          "type" : "array",
          "description" : "DEPRECATED. DO NOT USE",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        }
      },
      "description" : "Service organization"
    },
    "OrganizationService" : {
      "type" : "object",
      "properties" : {
        "additionalInformation" : {
          "type" : "array",
          "description" : "Localized list of additional information.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "serviceId" : {
          "type" : "string",
          "description" : "Service identifier."
        },
        "organizationId" : {
          "type" : "string",
          "description" : "Organization identifier (organization related to the service)."
        },
        "roleType" : {
          "type" : "string",
          "description" : "Role type, valid values Responsible or Producer."
        },
        "provisionType" : {
          "type" : "string",
          "description" : "Provision type, valid values SelfProduced, VoucherServices, PurchaseServices or Other. Required if RoleType value is Producer."
        },
        "webPages" : {
          "type" : "array",
          "description" : "List of web pages.",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        }
      },
      "description" : "Organization service"
    },
    "ElectronicServiceChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "signatureQuantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "requiresSignature" : {
          "type" : "boolean"
        },
        "supportPhones" : {
          "type" : "array",
          "description" : "List of support phone numbers for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Phone"
          }
        },
        "supportEmails" : {
          "type" : "array",
          "description" : "List of support email addresses for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Email"
          }
        },
        "requiresAuthentication" : {
          "type" : "boolean"
        },
        "urls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceChannelAttachment"
          }
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string"
        }
      }
    },
    "PhoneServiceChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Identifier for the service channel."
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Organization identifier responsible for the channel."
        },
        "names" : {
          "type" : "array",
          "description" : "Localized list of service channel names.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "description" : "List of localized service channel descriptions.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "List of phone numbers for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Phone"
          }
        },
        "supportEmails" : {
          "type" : "array",
          "description" : "List of support email addresses for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Email"
          }
        },
        "languages" : {
          "type" : "array",
          "description" : "List of languages the service channel is available in (two letter language code).",
          "items" : {
            "type" : "string"
          }
        },
        "webPages" : {
          "type" : "array",
          "description" : "List of service channel web pages.",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "description" : "List of service channel service hours.",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string",
          "description" : "Service channel publishing status. Values: Draft, Published, Deleted, Modified or OldPublished."
        }
      }
    },
    "PrintableFormServiceChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Identifier for the service channel."
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Organization identifier responsible for the channel."
        },
        "names" : {
          "type" : "array",
          "description" : "Localized list of service channel names.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "description" : "List of localized service channel descriptions.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "formIdentifier" : {
          "type" : "array",
          "description" : "List of localized form identifier. One per language.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "formReceiver" : {
          "type" : "array",
          "description" : "List of localized form receiver. One per language.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "deliveryAddress" : {
          "description" : "Form delivery address.",
          "$ref" : "#/definitions/Address"
        },
        "channelUrls" : {
          "type" : "array",
          "description" : "List of localized channel urls.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "attachments" : {
          "type" : "array",
          "description" : "List of attachments.",
          "items" : {
            "$ref" : "#/definitions/ServiceChannelAttachment"
          }
        },
        "supportPhones" : {
          "type" : "array",
          "description" : "List of support phone numbers for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Phone"
          }
        },
        "supportEmails" : {
          "type" : "array",
          "description" : "List of support email addresses for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Email"
          }
        },
        "languages" : {
          "type" : "array",
          "description" : "List of languages the service channel is available in (two letter language code).",
          "items" : {
            "type" : "string"
          }
        },
        "webPages" : {
          "type" : "array",
          "description" : "List of service channel web pages.",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "description" : "List of service channel service hours.",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string",
          "description" : "Service channel publishing status. Values: Draft, Published, Deleted, Modified or OldPublished."
        }
      }
    },
    "ServiceLocationServiceChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Identifier for the service channel."
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Organization identifier responsible for the channel."
        },
        "names" : {
          "type" : "array",
          "description" : "Localized list of service channel names.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "description" : "List of localized service channel descriptions.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "phoneNumbers" : {
          "type" : "array",
          "description" : "List of phone numbers for the service channel. Includes also fax numbers.",
          "items" : {
            "$ref" : "#/definitions/Phone"
          }
        },
        "emails" : {
          "type" : "array",
          "description" : "List email addresses for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Email"
          }
        },
        "languages" : {
          "type" : "array",
          "description" : "List of languages the service channel is available in (two letter language code).",
          "items" : {
            "type" : "string"
          }
        },
        "phoneServiceCharge" : {
          "type" : "boolean",
          "description" : "DEPRECATED. DO NOT USE!"
        },
        "webPages" : {
          "type" : "array",
          "description" : "List of service channel web pages.",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "areaType" : {
          "type" : "string",
          "description" : "Area type (WholeCountry, WholeCountryExceptAlandIslands, AreaType)."
        },
        "areas" : {
          "type" : "array",
          "description" : "List of service channel areas.",
          "items" : {
            "$ref" : "#/definitions/Area"
          }
        },
        "addresses" : {
          "type" : "array",
          "description" : "List of service location addresses.",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "description" : "List of service channel service hours.",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string",
          "description" : "Service channel publishing status. Values: Draft, Published, Deleted, Modified or OldPublished."
        }
      }
    },
    "WebPageServiceChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Identifier for the service channel."
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Organization identifier responsible for the channel."
        },
        "names" : {
          "type" : "array",
          "description" : "Localized list of service channel names.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "description" : "List of localized service channel descriptions.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "urls" : {
          "type" : "array",
          "description" : "List of localized urls.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "supportPhones" : {
          "type" : "array",
          "description" : "List of support phone numbers for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Phone"
          }
        },
        "supportEmails" : {
          "type" : "array",
          "description" : "List of support email addresses for the service channel.",
          "items" : {
            "$ref" : "#/definitions/Email"
          }
        },
        "languages" : {
          "type" : "array",
          "description" : "List of languages the service channel is available in (two letter language code).",
          "items" : {
            "type" : "string"
          }
        },
        "webPages" : {
          "type" : "array",
          "description" : "List of service channel web pages.",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "description" : "List of service channel service hours.",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string",
          "description" : "Service channel publishing status. Values: Draft, Published, Deleted, Modified or OldPublished."
        }
      }
    },
    "Event" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "originalUrl" : {
          "type" : "string",
          "format" : "url"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string",
          "format" : "date-time"
        },
        "end" : {
          "type" : "string",
          "format" : "date-time"
        },
        "city" : {
          "type" : "string"
        },
        "place" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        }
      }
    },
    "NewsArticle" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "abstract" : {
          "type" : "string"
        },
        "slug" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Page" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "titles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "meta" : {
          "$ref" : "#/definitions/PageMeta"
        }
      }
    },
    "PageMeta" : {
      "properties" : {
        "hideMenuChildren" : {
          "type" : "boolean"
        },
        "unmappedParentId" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "Shortlink" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "Fragment" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        }
      }
    },
    "Menu" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        }
      }
    },
    "MenuItem" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "label" : {
          "type" : "string"
        },
        "parentItemId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "pageId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "fileId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "externalUrl" : {
          "type" : "string"
        }
      }
    },
    "FileDef" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "pageId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "contentType" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Banner" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        },
        "textColor" : {
          "type" : "string"
        },
        "backgroundColor" : {
          "type" : "string"
        }
      }
    },
    "Tile" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        }
      }
    },
    "Job" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "employmentType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "organisationalUnit" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "string"
        },
        "taskArea" : {
          "type" : "string"
        },
        "publicationStart" : {
          "type" : "string",
          "format" : "date-time"
        },
        "publicationEnd" : {
          "type" : "string",
          "format" : "date-time"
        },
        "link" : {
          "type" : "string"
        }
      }
    },
    "Announcement" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "abstract" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ContactPhone" : {
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "number" : {
          "type" : "string"
        }
      }
    },
    "ContactStatus" : {
      "properties" : {
        "text" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string",
          "format" : "date-time"
        },
        "end" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Contact" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "displayName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "privateContact" : {
          "type" : "boolean"
        },
        "title" : {
          "type" : "string"
        },
        "organization" : {
          "type" : "string"
        },
        "organizationUnits" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "additionalInformations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "emails" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "phones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContactPhone"
          }
        },
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "statuses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContactStatus"
          }
        }
      }
    },
    "OrganizationSetting" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "WebPage" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Web page description."
        },
        "url" : {
          "type" : "string",
          "description" : "Web page url."
        },
        "language" : {
          "type" : "string",
          "description" : "Language code."
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Email" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        }
      }
    },
    "Phone" : {
      "type" : "object",
      "properties" : {
        "additionalInformation" : {
          "type" : "string"
        },
        "serviceChargeType" : {
          "type" : "string"
        },
        "chargeDescription" : {
          "type" : "string"
        },
        "prefixNumber" : {
          "type" : "string"
        },
        "isFinnishServiceNumber" : {
          "type" : "boolean"
        },
        "number" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "ServiceChannelAttachment" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "latitude" : {
          "type" : "string",
          "description" : "Service location latitude coordinate."
        },
        "longitude" : {
          "type" : "string",
          "description" : "Service location longitude coordinate."
        },
        "coordinateState" : {
          "type" : "string",
          "description" : "State of coordinates. Coordinates are fetched from a service provided by Maanmittauslaitos (WFS).\r\nPossible values are: Loading, Ok, Failed, NotReceived, EmptyInputReceived, MultipleResultsReceived or WrongFormatReceived."
        },
        "type" : {
          "type" : "string",
          "description" : "Address type, Visiting or Postal."
        },
        "subtype" : {
          "type" : "string",
          "description" : "Address sub type, Single, Street, PostOfficeBox, Abroad or Multipoint or NoAddress."
        },
        "postOfficeBox" : {
          "type" : "array",
          "description" : "Post office box like PL 310",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "postalCode" : {
          "type" : "string",
          "description" : "Postal code, for example 00010."
        },
        "postOffice" : {
          "type" : "array",
          "description" : "List of localized Post offices, for example Helsinki, Helsingfors.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "streetAddress" : {
          "type" : "array",
          "description" : "List of localized street addresses.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "streetNumber" : {
          "type" : "string",
          "description" : "Street number for street address."
        },
        "municipality" : {
          "$ref" : "#/definitions/Municipality"
        },
        "country" : {
          "type" : "string",
          "description" : "Country code (ISO 3166-1 alpha-2), for example FI."
        },
        "locationAbroad" : {
          "type" : "array",
          "description" : "Localized list of foreign address information.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "multipointLocation" : {
          "type" : "array",
          "description" : "Moving address. Includes several street addresses.",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "additionalInformations" : {
          "type" : "array",
          "description" : "Localized list of additional information about the address.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "ServiceHour" : {
      "type" : "object",
      "properties" : {
        "serviceHourType" : {
          "type" : "string"
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date time where from this entry is valid."
        },
        "validTo" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date time to this entry is valid."
        },
        "isClosed" : {
          "type" : "boolean",
          "description" : "Set to true to present a time between the valid from and to times as closed."
        },
        "validForNow" : {
          "type" : "boolean",
          "description" : "Set to true to present that this entry is valid for now."
        },
        "additionalInformation" : {
          "type" : "array",
          "description" : "Localized list of additional information.",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "openingHour" : {
          "type" : "array",
          "description" : "List of servicing hours (open and closes times).",
          "items" : {
            "$ref" : "#/definitions/DailyOpeningTime"
          }
        }
      }
    },
    "DailyOpeningTime" : {
      "type" : "object",
      "properties" : {
        "dayFrom" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Day index (0 == Sunday)"
        },
        "dayTo" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Day index (0 == Sunday)"
        },
        "from" : {
          "type" : "string",
          "description" : "Start time for example 10:00:00"
        },
        "to" : {
          "type" : "string",
          "description" : "End time for example 20:00:00"
        },
        "isExtra" : {
          "type" : "boolean",
          "description" : "Set to true to have extra time for a day. Enables to have open times like 10:00-14:00 and also on the same day 16:00-20:00. So the latter time is extra time."
        }
      }
    },
    "OntologyItem" : {
      "type" : "object",
      "properties" : {
        "system" : {
          "type" : "string"
        },
        "name" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "code" : {
          "type" : "string"
        },
        "ontologyType" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "string"
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "parentUri" : {
          "type" : "string"
        }
      }
    },
    "Law" : {
      "type" : "object",
      "properties" : {
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "webPages" : {
          "type" : "array",
          "description" : "List of localized web page urls.",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        }
      },
      "description" : "a Law"
    },
    "Trip" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "routeId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "scheduleId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "headsign" : {
          "type" : "string"
        }
      }
    },
    "Route" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "agencyId" : {
          "type" : "string"
        },
        "shortName" : {
          "type" : "string"
        },
        "longName" : {
          "type" : "string"
        }
      }
    },
    "Agency" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "timezone" : {
          "type" : "string"
        }
      }
    },
    "Stop" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "lat" : {
          "type" : "number",
          "format" : "double"
        },
        "lng" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "StopTime" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "tripId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "stopId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "arrivalTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "departureTime" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sequency" : {
          "type" : "integer",
          "format" : "int32"
        },
        "distanceTraveled" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Schedule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "days" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "exceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScheduleException"
          }
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Incident" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "detailsLink" : {
          "type" : "string",
          "format" : "url"
        },
        "detailsLinkText" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string",
          "format" : "date-time"
        },
        "end" : {
          "type" : "string",
          "format" : "date-time"
        },
        "areas" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ScheduleException" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "LocalizedValue" : {
      "type" : "object",
      "properties" : {
        "language" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Municipality" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Municipality code (like 491 or 091)."
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "Emergency" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "location" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "extent" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string",
          "description" : "Emergency latitude coordinate."
        },
        "longitude" : {
          "type" : "string",
          "description" : "Emergency longitude coordinate."
        },
        "sources" : {
          "type" : "array",
          "description" : "List of emergency source",
          "items" : {
            "$ref" : "#/definitions/EmergencySource"
          }
        }
      }
    },
    "EmergencySource" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      }
    },
    "Area" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Type of the area (Municipality, Province, BusinessRegions, HospitalRegions)."
        },
        "code" : {
          "type" : "string",
          "description" : "Code of the area."
        },
        "name" : {
          "type" : "array",
          "description" : "Localized list of names for the area",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "municipalities" : {
          "type" : "array",
          "description" : "List of municipalities including municipality code and a localized list of municipality names.",
          "items" : {
            "$ref" : "#/definitions/Municipality"
          }
        }
      },
      "description" : "Area"
    },
    "NameTypeByLanguage" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "DisplayNameType preferred by language code (Name or AlternateName)."
        },
        "language" : {
          "type" : "string",
          "description" : "Language code."
        }
      },
      "description" : "Name type by language"
    },
    "InternalServerError" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Forbidden" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "BadRequest" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotImplemented" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotFound" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  },
  "securityRequirement" : [ {
    "basicAuth" : [ ]
  } ]
}