{
  "swagger" : "2.0",
  "info" : {
    "description" : "Solution to combine municipality services under single API.",
    "version" : "0.1.0",
    "title" : "Kunta API"
  },
  "host" : "demo.kuntaapi.fi",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json;charset=utf-8" ],
  "produces" : [ "application/json;charset=utf-8" ],
  "paths" : {
    "/organizations" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "List organizations",
        "description" : "List organizations",
        "operationId" : "listOrganizations",
        "parameters" : [ {
          "name" : "businessName",
          "in" : "query",
          "description" : "Filter by organization's business name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "businessCode",
          "in" : "query",
          "description" : "Filter by organization's business code",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search organizations by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of organizations",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Organization"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Find organization",
        "description" : "Find organization",
        "operationId" : "findOrganization",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "organization id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization",
            "schema" : {
              "$ref" : "#/definitions/Organization"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/announcements" : {
      "get" : {
        "tags" : [ "Announcements" ],
        "summary" : "Lists organizations announcements",
        "description" : "Lists organizations announcements\n",
        "operationId" : "listOrganizationAnnouncements",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter with slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "first index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "PUBLICATION_DATE",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of announcements",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Announcement"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/announcements/{announcementId}" : {
      "get" : {
        "tags" : [ "Announcements" ],
        "summary" : "Finds an organizations announcement",
        "description" : "Finds organization's single announcement\n",
        "operationId" : "findOrganizationAnnouncement",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "announcementId",
          "in" : "path",
          "description" : "Announcement id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single announcement",
            "schema" : {
              "$ref" : "#/definitions/Announcement"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Lists organizations banners",
        "description" : "Lists organizations banners\n",
        "operationId" : "listOrganizationBanners",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of banners",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Banner"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Finds organizations banner",
        "description" : "Finds single organization banner\n",
        "operationId" : "findOrganizationBanner",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "banner id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization banner",
            "schema" : {
              "$ref" : "#/definitions/NewsArticle"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}/images" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Returns a list of organization banner images",
        "description" : "Returns a list of organization banner images\n",
        "operationId" : "listOrganizationBannerImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "Banner id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of organization banner images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Returns a single organiztion banner image",
        "description" : "Returns a single organiztion banner image\n",
        "operationId" : "findOrganizationBannerImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "Banner Id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Banner image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization banner image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/banners/{bannerId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Banners" ],
        "summary" : "Returns an organization banner image data",
        "description" : "Returns an organization banner image data\n",
        "operationId" : "getOrganizationBannerImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "bannerId",
          "in" : "path",
          "description" : "Banner id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Banner image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization banner image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/contacts" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Lists organizations contacts",
        "description" : "Lists organizations contacts\n",
        "operationId" : "listOrganizationContacts",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of contacts",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contact"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/contacts/{contactId}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Finds an organizations contact",
        "description" : "Finds organization's single contact\n",
        "operationId" : "findOrganizationContact",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "contactId",
          "in" : "path",
          "description" : "Contact id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single contact",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Lists organizations events",
        "description" : "Lists organizations events\n",
        "operationId" : "listOrganizationEvents",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "startBefore",
          "in" : "query",
          "description" : "return only events starting before the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "startAfter",
          "in" : "query",
          "description" : "return only events starting after the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endBefore",
          "in" : "query",
          "description" : "return only events ending before the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endAfter",
          "in" : "query",
          "description" : "return only events ending after the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "first index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "orderBy",
          "in" : "query",
          "description" : "define order (startDate, endDate). Default is startDate",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderDir",
          "in" : "query",
          "description" : "ascending, descending. Default is ascending",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of events",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Event"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns organizations event by id",
        "description" : "Returns organizations event by id\n",
        "operationId" : "findOrganizationEvent",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single event",
            "schema" : {
              "$ref" : "#/definitions/Event"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}/images" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns list of event images",
        "description" : "Returns list of event images\n",
        "operationId" : "listOrganizationEventImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of event images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns an event image",
        "description" : "Returns an event image \n",
        "operationId" : "findOrganizationEventImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an event image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/events/{eventId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Events" ],
        "summary" : "Returns an event image data",
        "description" : "Returns an event image data\n",
        "operationId" : "getOrganizationEventImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventId",
          "in" : "path",
          "description" : "Event id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an event image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/files" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Lists organizations files",
        "description" : "Lists organizations files\n",
        "operationId" : "listOrganizationFiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "query",
          "description" : "Filter with page",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search files by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations files",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FileDef"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/files/{fileId}" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Finds organizations file",
        "description" : "Finds single organization file\n",
        "operationId" : "findOrganizationFile",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fileId",
          "in" : "path",
          "description" : "file id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization file",
            "schema" : {
              "$ref" : "#/definitions/FileDef"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/files/{fileId}/data" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Returns an organization file data",
        "description" : "Returns an organization file data\n",
        "operationId" : "getOrganizationFileData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fileId",
          "in" : "path",
          "description" : "file id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization file data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/fragments" : {
      "get" : {
        "tags" : [ "Fragments" ],
        "summary" : "Lists organizations page fragments",
        "description" : "Lists organizations page fragments\n",
        "operationId" : "listOrganizationFragments",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter results by fragment slug",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of page fragments",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Fragment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/fragments/{fragmentId}" : {
      "get" : {
        "tags" : [ "Fragments" ],
        "summary" : "Finds organizations page fragment",
        "description" : "Finds single organization page fragment\n",
        "operationId" : "findOrganizationFragment",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "fragmentId",
          "in" : "path",
          "description" : "fragment id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization page fragment",
            "schema" : {
              "$ref" : "#/definitions/Fragment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/jobs" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Lists organizations jobs",
        "description" : "Lists organizations jobs\n",
        "operationId" : "listOrganizationJobs",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "PUBLICATION_START or PUBLICATION_END",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortDir",
          "in" : "query",
          "description" : "ASC or DESC",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations jobs",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Job"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "Jobs" ],
        "summary" : "Finds organizations job",
        "description" : "Finds single organization job\n",
        "operationId" : "findOrganizationJob",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "job id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization job",
            "schema" : {
              "$ref" : "#/definitions/Job"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Lists organizations menus",
        "description" : "Lists organizations menus\n",
        "operationId" : "listOrganizationMenus",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter with slug",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations menus",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Menu"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus/{menuId}" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Finds organizations menu",
        "description" : "Finds single organization menu\n",
        "operationId" : "findOrganizationMenu",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuId",
          "in" : "path",
          "description" : "menu id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization menu",
            "schema" : {
              "$ref" : "#/definitions/Menu"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus/{menuId}/items" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Lists organizations menu items",
        "description" : "Lists organization menu items\n",
        "operationId" : "listOrganizationMenuItems",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuId",
          "in" : "path",
          "description" : "menu id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organizations menu items",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MenuItem"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/menus/{menuId}/items/{menuItemId}" : {
      "get" : {
        "tags" : [ "Menus" ],
        "summary" : "Finds organization menu item",
        "description" : "Finds single organization menu item\n",
        "operationId" : "findOrganizationMenuItem",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuId",
          "in" : "path",
          "description" : "menu id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "menuItemId",
          "in" : "path",
          "description" : "menu item id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization menu item",
            "schema" : {
              "$ref" : "#/definitions/MenuItem"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Lists organizations news",
        "description" : "Lists organizations news\n",
        "operationId" : "listOrganizationNews",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "slug",
          "in" : "query",
          "description" : "Filter with slug",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "publishedBefore",
          "in" : "query",
          "description" : "return only news published before the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "publishedAfter",
          "in" : "query",
          "description" : "return only news published after the date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "first index of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "maximum number of results",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of news",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NewsArticle"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Finds organizations news article",
        "description" : "Finds organizations single news article\n",
        "operationId" : "findOrganizationNewsArticle",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single news article",
            "schema" : {
              "$ref" : "#/definitions/NewsArticle"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}/images" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Returns list of news article images",
        "description" : "Returns list of news article images\n",
        "operationId" : "listOrganizationNewsArticleImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a news article images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Returns an news article image",
        "description" : "Returns an news article image\n",
        "operationId" : "findOrganizationNewsArticleImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an news article image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/news/{newsArticleId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "News" ],
        "summary" : "Returns a news article image data",
        "description" : "Returns a news article image data\n",
        "operationId" : "getOrganizationNewsArticleImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "newsArticleId",
          "in" : "path",
          "description" : "News article id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Event image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a news article image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/organizationServices" : {
      "get" : {
        "tags" : [ "Organizations", "OrganizationServices" ],
        "summary" : "Organization organization service list",
        "description" : "Lists organization's organization services",
        "operationId" : "listOrganizationOrganizationServices",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of organization services",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OrganizationService"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Organizations", "OrganizationServices" ],
        "summary" : "Create organization service",
        "description" : "Create organization service",
        "operationId" : "createOrganizationService",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrganizationService"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created organization service",
            "schema" : {
              "$ref" : "#/definitions/Organization"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/organizationServices/{organizationServiceId}" : {
      "get" : {
        "tags" : [ "Organizations", "OrganizationServices" ],
        "summary" : "Finds a organization service by id",
        "description" : "Find an organization service",
        "operationId" : "findOrganizationService",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "organizationServiceId",
          "in" : "path",
          "description" : "Organization service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "An organization service",
            "schema" : {
              "$ref" : "#/definitions/OrganizationService"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Organizations", "OrganizationServices" ],
        "summary" : "Updates an organization service",
        "description" : "Updates organization service",
        "operationId" : "updateOrganizationService",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "organizationServiceId",
          "in" : "path",
          "description" : "Organization service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrganizationService"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An updated organization service",
            "schema" : {
              "$ref" : "#/definitions/OrganizationService"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Lists organizations pages",
        "description" : "Lists organizations pages\n",
        "operationId" : "listOrganizationPages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "parentId",
          "in" : "query",
          "description" : "Filter results by parent id",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "path",
          "in" : "query",
          "description" : "Filter results by page path",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search pages by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of pages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Page"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Finds organizations page",
        "description" : "Finds single organization page\n",
        "operationId" : "findOrganizationPage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization page",
            "schema" : {
              "$ref" : "#/definitions/Page"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/content" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns organizations page content in all available languages",
        "description" : "Returns single organization page content in all available languages\n",
        "operationId" : "findOrganizationPageContent",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns single page content in all available languages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LocalizedValue"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/images" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns a list of organization page images",
        "description" : "Returns a list of organization page images\n",
        "operationId" : "listOrganizationPageImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "Page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filter by type",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of organization page images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns a single organiztion page image",
        "description" : "Returns a single organiztion page image\n",
        "operationId" : "findOrganizationPageImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "Page Id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Page image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization page image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/pages/{pageId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Pages" ],
        "summary" : "Returns an organization page image data",
        "description" : "Returns an organization page image data\n",
        "operationId" : "getOrganizationPageImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pageId",
          "in" : "path",
          "description" : "Page id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Page image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization page image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/settings/" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Lists organizations settings",
        "description" : "Lists organizations settings\n",
        "operationId" : "listOrganizationSettings",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Setting key",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of settings",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OrganizationSetting"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Creates organization setting",
        "description" : "Creates organization setting\n",
        "operationId" : "createOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "setting",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OrganizationSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns create organization setting",
            "schema" : {
              "$ref" : "#/definitions/OrganizationSetting"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/settings/{settingId}" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Finds organizations setting",
        "description" : "Finds single organization setting\n",
        "operationId" : "findOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "settingId",
          "in" : "path",
          "description" : "Setting id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization setting",
            "schema" : {
              "$ref" : "#/definitions/OrganizationSetting"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Settings" ],
        "summary" : "Updates an organization setting",
        "description" : "Updates an organization setting\n",
        "operationId" : "updateOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "settingId",
          "in" : "path",
          "description" : "Setting id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "setting",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OrganizationSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single an updated organization setting",
            "schema" : {
              "$ref" : "#/definitions/OrganizationSetting"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Settings" ],
        "summary" : "Deletes an organization setting",
        "description" : "Deletes an organization setting\n",
        "operationId" : "deleteOrganizationSetting",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "settingId",
          "in" : "path",
          "description" : "Setting id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successful removal"
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Lists organizations tiles",
        "description" : "Lists organizations tiles\n",
        "operationId" : "listOrganizationTiles",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of tiles",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tile"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Finds organizations tile",
        "description" : "Finds single organization tile\n",
        "operationId" : "findOrganizationTile",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "tile id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single organization tile",
            "schema" : {
              "$ref" : "#/definitions/Tile"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}/images" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Returns a list of organization tile images",
        "description" : "Returns a list of organization tile images\n",
        "operationId" : "listOrganizationTileImages",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "Tile id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns list of organization tile images",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Attachment"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}/images/{imageId}" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Returns a single organiztion tile image",
        "description" : "Returns a single organiztion tile image\n",
        "operationId" : "findOrganizationTileImage",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "Tile Id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Tile image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization tile image",
            "schema" : {
              "$ref" : "#/definitions/Attachment"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tiles/{tileId}/images/{imageId}/data" : {
      "get" : {
        "tags" : [ "Tiles" ],
        "summary" : "Returns an organization tile image data",
        "description" : "Returns an organization tile image data\n",
        "operationId" : "getOrganizationTileImageData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tileId",
          "in" : "path",
          "description" : "Tile id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "imageId",
          "in" : "path",
          "description" : "Tile image id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "Maximum width or height of image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an organization tile image data",
            "schema" : {
              "type" : "string",
              "format" : "binary"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportAgencies" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists organizations public transport agencies",
        "description" : "Lists organizations public transport agencies\n",
        "operationId" : "listOrganizationPublicTransportAgencies",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of public transport agencies",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Agency"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportAgencies/{agencyId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds an organizations public transport agency",
        "description" : "Finds organization's single public transport agency\n",
        "operationId" : "findOrganizationPublicTransportAgency",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "agencyId",
          "in" : "path",
          "description" : "Agency id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single public transport agency",
            "schema" : {
              "$ref" : "#/definitions/Agency"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportRoutes" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists organizations public transport routes",
        "description" : "Lists organizations public transport routes\n",
        "operationId" : "listOrganizationPublicTransportRoutes",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of public transport routes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Route"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportRoutes/{routeId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds an organizations public transport route",
        "description" : "Finds organization's single public transport route\n",
        "operationId" : "findOrganizationPublicTransportRoute",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "routeId",
          "in" : "path",
          "description" : "Route id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a single public transport route",
            "schema" : {
              "$ref" : "#/definitions/Route"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportRoutes/{routeId}/stops" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists stops of organizations public transport route",
        "description" : "Lists stops of organizations public transport route\n",
        "operationId" : "listOrganizationPublicTransportRouteStops",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "routeId",
          "in" : "path",
          "description" : "Route id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of public transport routes stops",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Stop"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportRoutes/{routeId}/stops/{stopId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds a stop of organizations public transport route",
        "description" : "Finds a stop of organizations public transport route\n",
        "operationId" : "findOrganizationPublicTransportRouteStop",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "routeId",
          "in" : "path",
          "description" : "Route id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "stopId",
          "in" : "path",
          "description" : "Stop id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns organizations public transport route stop",
            "schema" : {
              "$ref" : "#/definitions/Stop"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportSchedules" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Lists schedules of organization's public transport schedules",
        "description" : "Lists schedules of organization's public transport schedules\n",
        "operationId" : "listOrganizationPublicTransportSchedules",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of organization's public transport schedules",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Schedule"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/transportSchedules/{scheduleId}" : {
      "get" : {
        "tags" : [ "Public transport" ],
        "summary" : "Finds organizations public transport schedule",
        "description" : "Finds organizations public transport schedule\n",
        "operationId" : "findOrganizationPublicTransportSchedule",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "path",
          "description" : "Organization id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "Schedule id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "returns an organizations public transport schedule",
            "schema" : {
              "$ref" : "#/definitions/Schedule"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Service list",
        "description" : "Lists services",
        "operationId" : "listServices",
        "parameters" : [ {
          "name" : "organizationId",
          "in" : "query",
          "description" : "Return only services belonging to specified organization",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Search services by free-text query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of services",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Service"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Services" ],
        "summary" : "Create service",
        "description" : "Creates new service",
        "operationId" : "createService",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created service",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}" : {
      "get" : {
        "tags" : [ "Services" ],
        "summary" : "Finds a service by id",
        "description" : "Finds service",
        "operationId" : "findService",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a service",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Services" ],
        "summary" : "Updates service",
        "description" : "Updates service",
        "operationId" : "updateService",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Organization service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Service"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns an updated service",
            "schema" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/electronicChannels" : {
      "get" : {
        "tags" : [ "Services", "ElectronicChannels" ],
        "summary" : "Lists ElectronicChannels by serviceId",
        "description" : "Lists ElectronicChannels by serviceId",
        "operationId" : "listServiceElectronicChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of ElectronicChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ElectronicChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Services", "ElectronicChannels" ],
        "summary" : "creates ElectronicChannel",
        "description" : "creates ElectronicChannel",
        "operationId" : "createServiceElectronicChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ElectronicChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns created ElectronicChannel",
            "schema" : {
              "$ref" : "#/definitions/ElectronicChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/electronicChannels/{electronicChannelId}" : {
      "get" : {
        "tags" : [ "Services", "ElectronicChannels" ],
        "summary" : "finds ElectronicChannel by electronicChannelId",
        "description" : "finds ElectronicChannels by electronicChannelId",
        "operationId" : "findServiceElectronicChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "electronicChannelId",
          "in" : "path",
          "description" : "electronicChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns ElectronicChannel",
            "schema" : {
              "$ref" : "#/definitions/ElectronicChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Services", "ElectronicChannels" ],
        "summary" : "Updates ElectronicChannel",
        "description" : "Updates ElectronicChannel",
        "operationId" : "updateServiceElectronicChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "electronicChannelId",
          "in" : "path",
          "description" : "electronicChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ElectronicChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns updated ElectronicChannel",
            "schema" : {
              "$ref" : "#/definitions/ElectronicChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/phoneChannels" : {
      "get" : {
        "tags" : [ "Services", "PhoneChannels" ],
        "summary" : "Lists PhoneChannels by serviceId",
        "description" : "Lists PhoneChannels by serviceId",
        "operationId" : "listServicePhoneChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of PhoneChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PhoneChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Services", "PhoneChannels" ],
        "summary" : "creates PhoneChannel",
        "description" : "creates PhoneChannel",
        "operationId" : "createServicePhoneChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PhoneChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns created PhoneChannel",
            "schema" : {
              "$ref" : "#/definitions/PhoneChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/phoneChannels/{phoneChannelId}" : {
      "get" : {
        "tags" : [ "Services", "PhoneChannels" ],
        "summary" : "finds PhoneChannel by phoneChannelId",
        "description" : "finds PhoneChannels by phoneChannelId",
        "operationId" : "findServicePhoneChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "phoneChannelId",
          "in" : "path",
          "description" : "phoneChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns PhoneChannel",
            "schema" : {
              "$ref" : "#/definitions/PhoneChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Services", "PhoneChannels" ],
        "summary" : "Updates PhoneChannel",
        "description" : "Updates PhoneChannel",
        "operationId" : "updatePhoneChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "phoneChannelId",
          "in" : "path",
          "description" : "phoneChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PhoneChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns updated PhoneChannel",
            "schema" : {
              "$ref" : "#/definitions/PhoneChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/printableFormChannels" : {
      "get" : {
        "tags" : [ "Services", "PrintableFormChannels" ],
        "summary" : "Lists PrintableFormChannels by serviceId",
        "description" : "Lists PrintableFormChannels by serviceId",
        "operationId" : "listServicePrintableFormChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of PrintableFormChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PrintableFormChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Services", "PrintableFormChannels" ],
        "summary" : "creates PrintableFormChannel",
        "description" : "creates PrintableFormChannel",
        "operationId" : "createServicePrintableFormChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrintableFormChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns created PrintableFormChannel",
            "schema" : {
              "$ref" : "#/definitions/PrintableFormChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/printableFormChannels/{printableFormChannelId}" : {
      "get" : {
        "tags" : [ "Services", "PrintableFormChannels" ],
        "summary" : "finds PrintableFormChannel by printableFormChannelId",
        "description" : "finds PrintableFormChannels by printableFormChannelId",
        "operationId" : "findServicePrintableFormChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "printableFormChannelId",
          "in" : "path",
          "description" : "printableFormChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns PrintableFormChannel",
            "schema" : {
              "$ref" : "#/definitions/PrintableFormChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Services", "PrintableFormChannels" ],
        "summary" : "Updates PrintableFormChannel",
        "description" : "Updates PrintableFormChannel",
        "operationId" : "updatePrintableFormChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "printableFormChannelId",
          "in" : "path",
          "description" : "printableFormChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PrintableFormChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns updated PrintableFormChannel",
            "schema" : {
              "$ref" : "#/definitions/PrintableFormChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/serviceLocationChannels" : {
      "get" : {
        "tags" : [ "Services", "ServiceLocationChannels" ],
        "summary" : "Lists ServiceLocationChannels by serviceId",
        "description" : "Lists ServiceLocationChannels by serviceId",
        "operationId" : "listServiceServiceLocationChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of ServiceLocationChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServiceLocationChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Services", "ServiceLocationChannels" ],
        "summary" : "creates ServiceLocationChannel",
        "description" : "creates ServiceLocationChannel",
        "operationId" : "createServiceServiceLocationChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceLocationChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns created ServiceLocationChannel",
            "schema" : {
              "$ref" : "#/definitions/ServiceLocationChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/serviceLocationChannels/{serviceLocationChannelId}" : {
      "get" : {
        "tags" : [ "Services", "ServiceLocationChannels" ],
        "summary" : "finds ServiceLocationChannel by serviceLocationChannelId",
        "description" : "finds ServiceLocationChannels by serviceLocationChannelId",
        "operationId" : "findServiceServiceLocationChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "serviceLocationChannelId",
          "in" : "path",
          "description" : "serviceLocationChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns ServiceLocationChannel",
            "schema" : {
              "$ref" : "#/definitions/ServiceLocationChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Services", "ServiceLocationChannels" ],
        "summary" : "Updates ServiceLocationChannel",
        "description" : "Updates ServiceLocationChannel",
        "operationId" : "updateServiceLocationChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "serviceLocationChannelId",
          "in" : "path",
          "description" : "serviceLocationChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ServiceLocationChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns updated ServiceLocationChannel",
            "schema" : {
              "$ref" : "#/definitions/ServiceLocationChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/webPageChannels" : {
      "get" : {
        "tags" : [ "Services", "WebPageChannels" ],
        "summary" : "Lists WebPageChannels by serviceId",
        "description" : "Lists WebPageChannels by serviceId",
        "operationId" : "listServiceWebPageChannels",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "First result",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Max results",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns array of WebPageChannels",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WebPageChannel"
              }
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Services", "WebPageChannels" ],
        "summary" : "creates WebPageChannel",
        "description" : "creates WebPageChannel",
        "operationId" : "createServiceWebPageChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WebPageChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns created WebPageChannel",
            "schema" : {
              "$ref" : "#/definitions/WebPageChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/services/{serviceId}/webPageChannels/{webPageChannelId}" : {
      "get" : {
        "tags" : [ "Services", "WebPageChannels" ],
        "summary" : "finds WebPageChannel by webPageChannelId",
        "description" : "finds WebPageChannels by webPageChannelId",
        "operationId" : "findServiceWebPageChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "Service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "webPageChannelId",
          "in" : "path",
          "description" : "webPageChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns WebPageChannel",
            "schema" : {
              "$ref" : "#/definitions/WebPageChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Services", "WebPageChannels" ],
        "summary" : "Updates WebPageChannel",
        "description" : "Updates WebPageChannel",
        "operationId" : "updateWebPageChannel",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "service id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "webPageChannelId",
          "in" : "path",
          "description" : "webPageChannel id",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WebPageChannel"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns updated WebPageChannel",
            "schema" : {
              "$ref" : "#/definitions/WebPageChannel"
            }
          },
          "400" : {
            "description" : "Invalid request was sent to the server",
            "schema" : {
              "$ref" : "#/definitions/BadRequest"
            }
          },
          "403" : {
            "description" : "Attempted to make a call with unauthorized client",
            "schema" : {
              "$ref" : "#/definitions/Forbidden"
            }
          },
          "404" : {
            "description" : "Resource was not found from the server",
            "schema" : {
              "$ref" : "#/definitions/NotFound"
            }
          },
          "500" : {
            "description" : "Internal server error",
            "schema" : {
              "$ref" : "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Attachment" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "contentType" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "Organization" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Unique identifier a organization."
        },
        "businessName" : {
          "type" : "string",
          "description" : "Primary name of organization"
        },
        "businessCode" : {
          "type" : "string",
          "description" : "Business code code of organization"
        }
      }
    },
    "Service" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "statutoryDescriptionId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "serviceClasses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "ontologyTerms" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "targetGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "lifeEvents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "industrialClasses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OntologyItem"
          }
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "keywords" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "coverageType" : {
          "type" : "string"
        },
        "municipalities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "requirements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "publishingStatus" : {
          "type" : "string"
        },
        "chargeType" : {
          "type" : "string"
        },
        "additionalInformations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "OrganizationService" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "serviceId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "roleType" : {
          "type" : "string"
        },
        "provisionType" : {
          "type" : "string"
        },
        "additionalInformation" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        }
      }
    },
    "ElectronicChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "signatureQuantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "requiresSignature" : {
          "type" : "boolean"
        },
        "supportContacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SupportContact"
          }
        },
        "requiresAuthentication" : {
          "type" : "boolean"
        },
        "urls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceChannelAttachment"
          }
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string"
        }
      }
    },
    "PhoneChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "phoneType" : {
          "type" : "string"
        },
        "chargeTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "supportContacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SupportContact"
          }
        },
        "phoneNumbers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "phoneChargeDescriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string"
        }
      }
    },
    "PrintableFormChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "formIdentifier" : {
          "type" : "string"
        },
        "formReceiver" : {
          "type" : "string"
        },
        "supportContacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SupportContact"
          }
        },
        "deliveryAddress" : {
          "$ref" : "#/definitions/Address"
        },
        "channelUrls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "deliveryAddressDescriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceChannelAttachment"
          }
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string"
        }
      }
    },
    "ServiceLocationChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "serviceAreaRestricted" : {
          "type" : "boolean"
        },
        "supportContacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SupportContact"
          }
        },
        "email" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "fax" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "string"
        },
        "longitude" : {
          "type" : "string"
        },
        "coordinateSystem" : {
          "type" : "string"
        },
        "coordinatesSetManually" : {
          "type" : "boolean"
        },
        "phoneServiceCharge" : {
          "type" : "boolean"
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceAreas" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "phoneChargeDescriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "chargeTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string"
        }
      }
    },
    "WebPageChannel" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "organizationId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "descriptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "urls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceChannelAttachment"
          }
        },
        "supportContacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SupportContact"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "webPages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebPage"
          }
        },
        "serviceHours" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ServiceHour"
          }
        },
        "publishingStatus" : {
          "type" : "string"
        }
      }
    },
    "Event" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "originalUrl" : {
          "type" : "string",
          "format" : "url"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string",
          "format" : "date-time"
        },
        "end" : {
          "type" : "string",
          "format" : "date-time"
        },
        "city" : {
          "type" : "string"
        },
        "place" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        },
        "zip" : {
          "type" : "string"
        }
      }
    },
    "NewsArticle" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "abstract" : {
          "type" : "string"
        },
        "slug" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Page" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "titles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "meta" : {
          "$ref" : "#/definitions/PageMeta"
        }
      }
    },
    "PageMeta" : {
      "properties" : {
        "hideMenuChildren" : {
          "type" : "boolean"
        }
      }
    },
    "Fragment" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        }
      }
    },
    "Menu" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        }
      }
    },
    "MenuItem" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "label" : {
          "type" : "string"
        },
        "parentItemId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "type" : {
          "type" : "string"
        },
        "pageId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "fileId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "externalUrl" : {
          "type" : "string"
        }
      }
    },
    "FileDef" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "pageId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "contentType" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Banner" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        },
        "textColor" : {
          "type" : "string"
        },
        "backgroundColor" : {
          "type" : "string"
        }
      }
    },
    "Tile" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        }
      }
    },
    "Job" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "title" : {
          "type" : "string"
        },
        "employmentType" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "organisationalUnit" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "string"
        },
        "taskArea" : {
          "type" : "string"
        },
        "publicationStart" : {
          "type" : "string",
          "format" : "date-time"
        },
        "publicationEnd" : {
          "type" : "string",
          "format" : "date-time"
        },
        "link" : {
          "type" : "string"
        }
      }
    },
    "Announcement" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "slug" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "abstract" : {
          "type" : "string"
        },
        "contents" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ContactPhone" : {
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "number" : {
          "type" : "string"
        }
      }
    },
    "ContactStatus" : {
      "properties" : {
        "text" : {
          "type" : "string"
        },
        "start" : {
          "type" : "string",
          "format" : "date-time"
        },
        "end" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Contact" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "displayName" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "organization" : {
          "type" : "string"
        },
        "organizationUnits" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "additionalInformations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "emails" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "phones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContactPhone"
          }
        },
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "statuses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContactStatus"
          }
        }
      }
    },
    "OrganizationSetting" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "WebPage" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Web page description."
        },
        "url" : {
          "type" : "string",
          "description" : "Web page url."
        },
        "language" : {
          "type" : "string",
          "description" : "Language code."
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "SupportContact" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "phoneChargeDescription" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        },
        "serviceChargeTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ServiceChannelAttachment" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "language" : {
          "type" : "string"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "postOfficeBox" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "postOffice" : {
          "type" : "string"
        },
        "streetAddress" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        },
        "municipality" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "qualifier" : {
          "type" : "string"
        },
        "additionalInformations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "ServiceHour" : {
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "validFrom" : {
          "type" : "string",
          "format" : "date-time"
        },
        "validTo" : {
          "type" : "string",
          "format" : "date-time"
        },
        "opens" : {
          "type" : "string",
          "format" : "time"
        },
        "closes" : {
          "type" : "string",
          "format" : "time"
        },
        "days" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "status" : {
          "type" : "string"
        },
        "additionalInformation" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocalizedValue"
          }
        }
      }
    },
    "OntologyItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "system" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "ontologyType" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "string"
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "parentUri" : {
          "type" : "string"
        }
      }
    },
    "Route" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "agencyId" : {
          "type" : "string"
        },
        "shortName" : {
          "type" : "string"
        },
        "longName" : {
          "type" : "string"
        },
        "schedules" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        }
      }
    },
    "Agency" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "timezone" : {
          "type" : "string"
        }
      }
    },
    "Stop" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "lat" : {
          "type" : "number"
        },
        "lng" : {
          "type" : "number"
        }
      }
    },
    "Schedule" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "days" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "exceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScheduleException"
          }
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ScheduleException" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "LocalizedValue" : {
      "type" : "object",
      "properties" : {
        "language" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "InternalServerError" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Forbidden" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "BadRequest" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotImplemented" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "NotFound" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    }
  }
}