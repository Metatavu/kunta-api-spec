/**
 * Kunta API
 * Solution to combine municipality services under single API.
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package fi.metatavu.kuntaapi.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import fi.metatavu.kuntaapi.client.model.CodeExtra;
import fi.metatavu.kuntaapi.client.model.LocalizedValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * Generic code item describing code / name pair (e.g. LanguageCode, MunicipalityCode, etc...)
 */
@ApiModel(description = "Generic code item describing code / name pair (e.g. LanguageCode, MunicipalityCode, etc...)")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-01-18T06:52:51.644+02:00")
public class Code   {
  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("names")
  private List<LocalizedValue> names = new ArrayList<LocalizedValue>();

  @SerializedName("extra")
  private List<CodeExtra> extra = new ArrayList<CodeExtra>();

  public Code id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Kunta API id for code
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "Kunta API id for code")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Code type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the code. Value must be one of MUNICIPALITY, PROVINCE, HOSPITALREGIONS, BUSINESSREGIONS, COUNTRY, LANGUAGE, POSTAL
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "Type of the code. Value must be one of MUNICIPALITY, PROVINCE, HOSPITALREGIONS, BUSINESSREGIONS, COUNTRY, LANGUAGE, POSTAL")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Code code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Code
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Code")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public Code names(List<LocalizedValue> names) {
    this.names = names;
    return this;
  }

  public Code addNamesItem(LocalizedValue namesItem) {
    this.names.add(namesItem);
    return this;
  }

   /**
   * Names
   * @return names
  **/
  @ApiModelProperty(example = "null", value = "Names")
  public List<LocalizedValue> getNames() {
    return names;
  }

  public void setNames(List<LocalizedValue> names) {
    this.names = names;
  }

  public Code extra(List<CodeExtra> extra) {
    this.extra = extra;
    return this;
  }

  public Code addExtraItem(CodeExtra extraItem) {
    this.extra.add(extraItem);
    return this;
  }

   /**
   * Names
   * @return extra
  **/
  @ApiModelProperty(example = "null", value = "Names")
  public List<CodeExtra> getExtra() {
    return extra;
  }

  public void setExtra(List<CodeExtra> extra) {
    this.extra = extra;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Code code = (Code) o;
    return Objects.equals(this.id, code.id) &&
        Objects.equals(this.type, code.type) &&
        Objects.equals(this.code, code.code) &&
        Objects.equals(this.names, code.names) &&
        Objects.equals(this.extra, code.extra);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, code, names, extra);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Code {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

