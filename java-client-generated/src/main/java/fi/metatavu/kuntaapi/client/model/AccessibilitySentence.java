/**
 * Kunta API
 * Solution to combine municipality services under single API.
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package fi.metatavu.kuntaapi.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import fi.metatavu.kuntaapi.client.model.AccessibilitySentenceValue;
import fi.metatavu.kuntaapi.client.model.LocalizedValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * Accessibility sentences.
 */
@ApiModel(description = "Accessibility sentences.")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2019-07-08T18:08:24.691+03:00")
public class AccessibilitySentence   {
  @SerializedName("sentenceGroup")
  private List<LocalizedValue> sentenceGroup = new ArrayList<LocalizedValue>();

  @SerializedName("sentences")
  private List<AccessibilitySentenceValue> sentences = new ArrayList<AccessibilitySentenceValue>();

  public AccessibilitySentence sentenceGroup(List<LocalizedValue> sentenceGroup) {
    this.sentenceGroup = sentenceGroup;
    return this;
  }

  public AccessibilitySentence addSentenceGroupItem(LocalizedValue sentenceGroupItem) {
    this.sentenceGroup.add(sentenceGroupItem);
    return this;
  }

   /**
   * List of localized sentence group names.
   * @return sentenceGroup
  **/
  @ApiModelProperty(example = "null", value = "List of localized sentence group names.")
  public List<LocalizedValue> getSentenceGroup() {
    return sentenceGroup;
  }

  public void setSentenceGroup(List<LocalizedValue> sentenceGroup) {
    this.sentenceGroup = sentenceGroup;
  }

  public AccessibilitySentence sentences(List<AccessibilitySentenceValue> sentences) {
    this.sentences = sentences;
    return this;
  }

  public AccessibilitySentence addSentencesItem(AccessibilitySentenceValue sentencesItem) {
    this.sentences.add(sentencesItem);
    return this;
  }

   /**
   * List of localized sentences.
   * @return sentences
  **/
  @ApiModelProperty(example = "null", value = "List of localized sentences.")
  public List<AccessibilitySentenceValue> getSentences() {
    return sentences;
  }

  public void setSentences(List<AccessibilitySentenceValue> sentences) {
    this.sentences = sentences;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessibilitySentence accessibilitySentence = (AccessibilitySentence) o;
    return Objects.equals(this.sentenceGroup, accessibilitySentence.sentenceGroup) &&
        Objects.equals(this.sentences, accessibilitySentence.sentences);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sentenceGroup, sentences);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessibilitySentence {\n");
    
    sb.append("    sentenceGroup: ").append(toIndentedString(sentenceGroup)).append("\n");
    sb.append("    sentences: ").append(toIndentedString(sentences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

